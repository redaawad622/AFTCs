generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["debian-openssl-1.1.x", "native"]
}

datasource db {
  provider = "sqlite"
  url      = "file:./exam.db"

}

model T_Answers {
  Ans_Qus_ID  Int
  Ans_ID      Int         @id @default(autoincrement())
  Ans_Is_Pic  Boolean     @default(false)
  Ans_Text    String?
  Ans_Value   Float?
  Ans_audio   Bytes?
  Ans_Cat     String?
  T_Questions T_Questions @relation(fields: [Ans_Qus_ID], references: [Qus_ID], onDelete: Cascade, onUpdate: NoAction)
  Answers     Answers[]
}

model T_Categories {
  Cat_ID   Int     @id
  Cat_Name String  @unique
  isLogin  Boolean @default(false)
  type     Int     @default(2)
  host     String?
  username String?
  zoom     Int     @default(100)
  password String  @default("$2a$08$oAi0Hoi5q949I/bLp9QxkeHvakgwmbApRkxVOU2YDEoYSaXoyU6My")
  Log      Log[]

  Battries  Battries[]
  Examiners Examiners[]
}

model T_Exams {
  Exm_ID                    Int            @id @default(autoincrement())
  Exm_Name                  String?
  Exm_Display_Name          String?        @default("ss")
  Exm_Duration_In_Mins      Int?           @default(0)
  Exm_Given_Questions_Count Int?           @default(-1)
  Exm_Description           String?        @default("ss")
  Exm_Is_Custom             Boolean        @default(false)
  Exm_Is_Computerized       Boolean        @default(false)
  Exm_mlhoz                 Int?
  Exm_mokser                Int?
  show                      Boolean        @default(true)
  category                  String?        @default("نفسي")
  random                    String?        @default("عشوائي")
  Questions                 T_Questions[]
  Battary_Exam              Battary_Exam[]
  CustomExam                CustomExam[]
}

model T_Questions {
  Qus_Exm_ID    Int
  Qus_ID        Int         @id @default(autoincrement())
  Qus_Is_Pic    Boolean     @default(false)
  Qus_Text      String?
  Qus_Pic_UNC   String?
  Qus_audio     Bytes?
  Qus_Order_Cat Int?
  T_Answers     T_Answers[]
  T_Exams       T_Exams?    @relation(fields: [Qus_Exm_ID], references: [Exm_ID])
}

model Examiners {
  id                 Int           @id @default(autoincrement())
  national_id        String        @unique
  triple_number      String?       @unique
  name               String
  stage              String
  barcode            String?       @unique
  sold_id            String?       @unique
  mohafza_code       Int?
  qualification_code Int?
  marital_state      String?
  educational_degree String?
  user_id            Int?
  created_at         DateTime      @default(now())
  update_at          DateTime?
  Answers            Answers[]
  battary_id         Int?
  isDeleted          Boolean       @default(false)
  //unit details
  UNIT_NAME          String?
  GEHA_NAME          String?
  TAMARKZ_NAME       String?
  UNIT_ARMY_NAME     String?
  ARMY_TAGNEED_NAME  String?
  isNoticed          Boolean       @default(false)
  nextFollowDate     DateTime?
  numFollowUps       Int           @default(0)
  CustomExam         CustomExam[]
  T_Categories       T_Categories? @relation(fields: [t_CategoriesCat_ID], references: [Cat_ID])
  t_CategoriesCat_ID Int?
  Interview          Interview[]
}

model Battries {
  id           Int            @id @default(autoincrement())
  name         String         @unique
  user_id      Int?           @unique
  weapon_id    Int?           @unique
  user         T_Categories?  @relation(fields: [user_id], references: [Cat_ID])
  Battary_Exam Battary_Exam[]
}

model Battary_Exam {
  battary    Battries @relation(fields: [battary_id], references: [id])
  battary_id Int
  exam       T_Exams  @relation(fields: [exam_id], references: [Exm_ID])
  exam_id    Int
  assignedAt DateTime @default(now())

  @@id([battary_id, exam_id])
}

model Assign {
  id         Int      @id @default(autoincrement())
  exam_id    Int      @unique
  created_at DateTime @default(now())
}

model Answers {
  id          Int        @id @default(autoincrement())
  exam_id     Int
  question_id Int
  answer_id   Int
  examiner_id Int
  created_at  DateTime   @default(now())
  duration    Int?
  Examiners   Examiners? @relation(fields: [examiner_id], references: [id], onDelete: Cascade)
  answer      T_Answers? @relation(fields: [answer_id], references: [Ans_ID])

}

model reception {
  id         Int      @id @default(autoincrement())
  degree     String
  name       String
  details    String?
  case       Int      @default(2)
  new        Int      @default(1)
  update     Int      @default(0)
  created_at DateTime @default(now())
}

model Log {
  id             Int           @id @default(autoincrement())
  user_id        Int
  user           T_Categories? @relation(fields: [user_id], references: [Cat_ID], onDelete: Cascade)
  description    String?
  operation_type String?
  type           String?
  oldVal         String?
  newVal         String?
  created_at     DateTime      @default(now())
}

model CustomExam {
  id          Int        @id @default(autoincrement())
  examiner_id Int
  exam_id     Int
  value       String
  Examiners   Examiners? @relation(fields: [examiner_id], references: [id], onDelete: Cascade)
  exam        T_Exams?   @relation(fields: [exam_id], references: [Exm_ID], onDelete: Cascade)
  created_at  DateTime   @default(now())

  @@unique([examiner_id, exam_id])
}

model Interview {
  id                    Int        @id @default(autoincrement())
  examiner_id           Int
  Examiners             Examiners? @relation(fields: [examiner_id], references: [id], onDelete: Cascade)
  parent_job            String
  siblings_num          Int
  family_relation       String
  complaint             String
  appearance            String
  focus_ability         String
  mood                  String
  speaking_disorder     String
  medicine_type         String
  has_medical_history   String
  hospital_name         String?
  drugs_history         String
  drug_type             String?
  final_opinion         String
  examiner_status       String
  final_hospital_result String
  created_at            DateTime   @default(now())
  updated_at            DateTime   @default(now())

}

model Weapons {
  id        Int     @id @default(autoincrement())
  V_SELAH   String?
  MIL_SELAH String?
}
